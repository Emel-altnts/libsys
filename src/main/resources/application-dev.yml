server:
  port: 9090

spring:
  # PostgreSQL VeritabanÄ± YapÄ±landÄ±rmasÄ±
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  # JPA/Hibernate YapÄ±landÄ±rmasÄ± - FIXED VERSION
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        generate_statistics: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        cache:
          use_second_level_cache: false
          use_query_cache: false
        current_session_context_class: thread
        id:
          new_generator_mappings: true

  # ðŸš€ FIXED: Kafka YapÄ±landÄ±rmasÄ± - AUTO_COMMIT aktif
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: 1
      retries: 3
      retry-backoff-ms: 1000
      request-timeout-ms: 30000
      properties:
        enable.idempotence: false
    consumer:
      group-id: libsys-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      # ðŸš€ CRITICAL FIX: enable-auto-commit TRUE yapÄ±ldÄ±
      enable-auto-commit: true
      auto-commit-interval: 5000
      properties:
        spring.json.trusted.packages: "com.d_tech.libsys.dto"
        spring.json.use.type.headers: false
        spring.json.value.default.type: "com.d_tech.libsys.dto.StockOrderEvent"
      listener:
        # ðŸš€ CRITICAL FIX: ack-mode RECORD yapÄ±ldÄ± (manual_immediate yerine)
        ack-mode: record
        concurrency: 1
        poll-timeout: 3000
        missing-topics-fatal: false

# Uygulama Ã¶zel yapÄ±landÄ±rmalarÄ±
app:
  kafka:
    topic:
      user-registration: user-registration-topic
      stock-control: stock-control-topic
      stock-order: stock-order-topic
      invoice: invoice-topic

# DetaylÄ± loglama yapÄ±landÄ±rmasÄ±
logging:
  level:
    root: INFO
    com.d_tech.libsys: DEBUG
    com.d_tech.libsys.controller: DEBUG
    com.d_tech.libsys.service: DEBUG
    com.d_tech.libsys.repository: DEBUG
    # Hibernate debug
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
    # Spring Data JPA debug
    org.springframework.data.jpa: DEBUG
    # Transaction debug
    org.springframework.transaction: DEBUG
    org.springframework.orm.jpa: DEBUG
    # Kafka debug - daha az verbose
    org.springframework.kafka: INFO
    org.apache.kafka: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/libsys-debug.log

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers,beans,mappings,env
  endpoint:
    health:
      show-details: always
    loggers:
      enabled: true