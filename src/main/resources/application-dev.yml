server:
  port: ${PORT:8080}

spring:
  # Railway PostgreSQL connection
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/railway}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 3
      minimum-idle: 1
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 900000
      leak-detection-threshold: 0

  jpa:
    open-in-view: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
        jdbc:
          batch_size: 10
          fetch_size: 25
        order_inserts: true
        order_updates: true
        cache:
          use_second_level_cache: false
          use_query_cache: false
        id:
          new_generator_mappings: true

  # Upstash Kafka configuration
  kafka:
    bootstrap-servers: ${UPSTASH_KAFKA_ENDPOINT:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: 1
      retries: 3
      properties:
        # Upstash Kafka SASL/SSL settings
        security.protocol: ${UPSTASH_KAFKA_SECURITY_PROTOCOL:SASL_SSL}
        sasl.mechanism: ${UPSTASH_KAFKA_SASL_MECHANISM:SCRAM-SHA-256}
        sasl.jaas.config: ${UPSTASH_KAFKA_SASL_JAAS_CONFIG:}
        # SSL settings for Upstash
        ssl.endpoint.identification.algorithm: https
        ssl.truststore.type: JKS
    consumer:
      group-id: ${UPSTASH_KAFKA_GROUP_ID:libsys-railway}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: true
      properties:
        spring.json.trusted.packages: "com.d_tech.libsys.dto"
        spring.json.use.type.headers: false
        # Upstash Kafka SASL/SSL settings
        security.protocol: ${UPSTASH_KAFKA_SECURITY_PROTOCOL:SASL_SSL}
        sasl.mechanism: ${UPSTASH_KAFKA_SASL_MECHANISM:SCRAM-SHA-256}
        sasl.jaas.config: ${UPSTASH_KAFKA_SASL_JAAS_CONFIG:}
        # SSL settings for Upstash
        ssl.endpoint.identification.algorithm: https
        ssl.truststore.type: JKS

# Application configuration
app:
  kafka:
    enabled: ${KAFKA_ENABLED:false}
    topic:
      user-registration: ${UPSTASH_KAFKA_PREFIX:}user-registration-topic
      stock-control: ${UPSTASH_KAFKA_PREFIX:}stock-control-topic
      stock-order: ${UPSTASH_KAFKA_PREFIX:}stock-order-topic
      invoice: ${UPSTASH_KAFKA_PREFIX:}invoice-topic

# Logging - Railway optimized
logging:
  level:
    root: INFO
    com.d_tech.libsys: INFO
    org.hibernate.SQL: WARN
    org.springframework.kafka: { ${KAFKA_ENABLED:false} == 'true' ? INFO: OFF }
    org.apache.kafka: OFF
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always