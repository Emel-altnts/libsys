package com.d_tech.libsys.dto;

import com.fasterxml.jackson.annotation.JsonFormat;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;

/**
 * ðŸš€ UPDATED: Stok sipariÅŸ event'i - SHIP_ORDER eklendi
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class StockOrderEvent {

    /**
     * EÅŸsiz event ID'si
     */
    private String eventId;

    /**
     * Event tipi
     */
    private EventType eventType;

    /**
     * SipariÅŸ bilgileri
     */
    private StockOrderRequest orderRequest;

    /**
     * SipariÅŸ ID'si (oluÅŸturulduktan sonra)
     */
    private Long orderId;

    /**
     * Event oluÅŸturulma zamanÄ±
     */
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    @Builder.Default
    private LocalDateTime eventTime = LocalDateTime.now();

    /**
     * Event durumu
     */
    @Builder.Default
    private EventStatus status = EventStatus.PENDING;

    /**
     * Ä°ÅŸlem sonucu mesajÄ±
     */
    private String message;

    /**
     * Retry sayÄ±sÄ±
     */
    @Builder.Default
    private Integer retryCount = 0;

    /**
     * ðŸš€ UPDATED: Event tipi enum'u - SHIP_ORDER eklendi
     */
    public enum EventType {
        CREATE_ORDER,      // SipariÅŸ oluÅŸtur
        UPDATE_ORDER,      // SipariÅŸ gÃ¼ncelle
        CONFIRM_ORDER,     // SipariÅŸ onayla
        SHIP_ORDER,        // ðŸš€ YENÄ°: SipariÅŸ kargoya ver (CONFIRMED â†’ SHIPPED)
        CANCEL_ORDER,      // SipariÅŸ iptal et
        RECEIVE_ORDER,     // SipariÅŸ teslimat al
        GENERATE_INVOICE   // Fatura oluÅŸtur
    }

    /**
     * Event durumu enum'u
     */
    public enum EventStatus {
        PENDING,     // Beklemede
        PROCESSING,  // Ä°ÅŸleniyor
        COMPLETED,   // TamamlandÄ±
        FAILED       // BaÅŸarÄ±sÄ±z
    }

    /**
     * Retry edilebilir mi kontrol eder
     */
    public boolean canRetry() {
        return retryCount < 3;
    }

    /**
     * Retry sayÄ±sÄ±nÄ± artÄ±rÄ±r
     */
    public void incrementRetry() {
        this.retryCount++;
    }
}